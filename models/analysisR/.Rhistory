? read.json
?? json.read
? json
?? json
json.read
json
setwd('~/kaggle/renthop/')
df <- read.csv('input/framed_data.csv')
df <- read.csv('input/framed_data.csv', sep=',')
? read.csv
df <- read.csv('input/framed_data.csv', sep=',')
df <- read.csv('input/framed_data.csv', sep=',')
View(df)
df <- read.csv('input/framed_data.csv', sep=',')
View(df)
df <- read.csv('input/framed_data.csv', sep=',')
df <- read.csv('input/framed_data.csv', sep=',')
View(df)
df <- read.csv('input/framed_data.csv', sep=',')
View(df)
df <- read.csv('input/framed_data.csv', sep=';')
View(df)
df <- read.csv('input/framed_data.csv', sep='\t')
View(df)
? dropna
?? dropna
help(df)
help(data.frame)
df <- read.csv('input/framed_data.csv', sep='\t')
View(df)
df <- read.csv('input/framed_data.csv', sep='\t')
load(randomForest)
library(randomForest)
library(readr)
rows <- sample(1:nrow(df), nrow(df) * .7)
rf <- randomForest(interest_level ~ ., rows)
rf <- randomForest(interest_level ~ ., df[rows,])
? sample
? nrow
type(df)
typeof(df)
lapply(df, typeof)
head(df)
typeof(df$interest_level)
levels(df$interest_level)
summary(df)
rf <- randomForest(interest_level ~ created + price + bedrooms + longitude + manager_id + latitude + bathrooms + building_id, df[rows,])
df$interest_level <- as.factor(df$interest_level)
lapply(df, typeof)
train_rows <- sample(1:nrow(df), nrow(df) * .7)
df$price <- as.integer(df$price)
rf <- randomForest(interest_level ~ price + bedrooms + longitude + manager_id + latitude + bathrooms + building_id, df[train_rows,])
df$bedrooms <- as.float(bedrooms)
df$bedrooms <- as.double(bedrooms)
df$bedrooms <- as.double(df$bedrooms)
df$bathrooms <- as.double(df$bathrooms)
df$latitude <- as.double(df$latitude)
df$longitude <- as.double(df$longitude)
rf <- randomForest(interest_level ~ price + bedrooms + longitude + latitude + bathrooms, df[train_rows,])
summary(rf)
? predict
predicted <- rf(df[!train_rows,])
predicted <- predict(df[!train_rows,], rf)
predicted <- predict(rf, df[!train_rows,])
mean(predicted == df[!train_rows,]$interest_level)
predicted
sum(predicted)
predicted <- rf.predict(df[!train_rows,])
predicted <- predict.rf(df[!train_rows,])
dir(rf)
help(rf)
?randomForest
rf <- randomForest(interest_level ~ price + bedrooms + longitude + latitude + bathrooms, data = train, xtest = test)
train_rows <- sample(1:nrow(df), nrow(df) * .7)
train <- df[train_rows,]
test <- df[!train_rows,]
rf <- randomForest(interest_level ~ price + bedrooms + longitude + latitude + bathrooms, data = train, xtest = test)
rf <- randomForest(interest_level ~ price + bedrooms + longitude + latitude + bathrooms, x = train, xtest = test)
rf <- randomForest(interest_level ~ price + bedrooms + longitude + latitude + bathrooms, train, test = test)
summary(rf)
head(rf$test)
head(rf$train)
head(rf$predicted)
36905 %in% train_rows
summary(rf$predicted)
summary(df[train_rows,]$interest_level)
rf <- randomForest(interest_level ~ price + bedrooms + longitude + latitude + bathrooms, train)
predicted <- fit(rf, test)
? rf.fit
?? rf.fit
?? fit
predicted <- predict(rf, test)
summary(predicted)
predicted
summary(test)
summary(rf)
rf(train)
? rf
? classify
?? classify
predicted <- predict(rf, test, type="response")
predicted
predicted <- predict(rf, newdata=test, type="response")
predicted
predict(rf, test)
predict(randomForest(interest_level ~ price, train), test)
summary(train$interest_level)
summary(test$interest_level)
summary(test$interest_level)
library(randomForest)
library(readr)
setwd('~/kaggle/renthop/')
df <- read.csv('input/framed_data.csv', sep='\t')
df$interest_level <- as.factor(df$interest_level)
df$price <- as.integer(df$price)
df$bedrooms <- as.double(df$bedrooms)
df$bathrooms <- as.double(df$bathrooms)
df$latitude <- as.double(df$latitude)
df$longitude <- as.double(df$longitude)
train_rows <- sample(1:nrow(df), nrow(df) * .7)
train <- df[train_rows,]
test <- df[!train_rows,]
summary(test$interest_level)
train_rows
!train_rows
train_rows <- sample(1:nrow(df), 20000)
train_rows
df[train_rows,]
summary(df[train_rows,]$interest_level)
summary(df[!train_rows,]$interest_level)
summary(train_rows)
train_rows <- sample(1:nrow(df), 10)
train_rows <- sample(1:nrow(df), 10)
summary(train_rows)
train_rows
nrow(df)*.7
train_rows <- sample(1:nrow(df), nrow(df) * .7)
df[!train_rows,]
train <- df[train_rows==TRUE,]
test <- df[train_rows==FALSE,]
summary(test)
summary(train)
predict(randomForest(interest_level ~ price + bedrooms, train), test)
? sample
train_rows <- sample(c(TRUE, FALSE), nrow(df), replace = TRUE)
summary(train_rows)
train_rows <- sample(c(TRUE, FALSE), nrow(df), replace = TRUE)
train <- df[train_rows,]
test <- df[train_rows,]
test <- df[!train_rows,]
predict(randomForest(interest_level ~ price + bedrooms, train), test)
predicted <- predict(randomForest(interest_level ~ price + bedrooms, train), test)
mean(predicted == test$interest_level)
rf <- randomForest(interest_level ~ price + bedrooms + bathrooms + latitude + longitude, train)
predicted <- predict(rf, test)
mean(predicted == test$interest_level)
train_rows <- sample(c(TRUE, TRUE, FALSE), nrow(df), replace = TRUE)
train <- df[train_rows,]
test <- df[!train_rows,]
#rf <- randomForest(interest_level ~ price + bedrooms + longitude + latitude + bathrooms, train)
rf <- randomForest(interest_level ~ price + bedrooms + bathrooms + latitude + longitude, train)
predicted <- predict(rf, test)
mean(predicted == test$interest_level)
?? confusion
plot(predicted, test$interest_level)
plot(test$interest_level, predicted)
